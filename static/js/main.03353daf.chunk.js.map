{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03353daf.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n\treturn <h2>Expense Tracker</h2>;\n};\n","// Specifying the application state changes in response to the store, to the context\n\nexport default (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"DELETE_TRANSACTION\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttransactions: state.transactions.filter(\n\t\t\t\t\t(transaction) => transaction.id !== action.payload,\n\t\t\t\t),\n\t\t\t};\n\t\tcase \"ADD_TRANSACTION\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttransactions: [action.payload, ...state.transactions],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","// Global state gets passed down to any components that need it\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// Initial state\nconst initialState = {\n\ttransactions: [],\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(AppReducer, initialState);\n\n\t// Actions\n\tfunction deleteTransaction(id) {\n\t\tdispatch({\n\t\t\ttype: \"DELETE_TRANSACTION\",\n\t\t\tpayload: id,\n\t\t});\n\t}\n\n\tfunction addTransaction(transaction) {\n\t\tdispatch({\n\t\t\ttype: \"ADD_TRANSACTION\",\n\t\t\tpayload: transaction,\n\t\t});\n\t}\n\n\treturn (\n\t\t<GlobalContext.Provider\n\t\t\tvalue={{\n\t\t\t\ttransactions: state.transactions,\n\t\t\t\tdeleteTransaction,\n\t\t\t\taddTransaction,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</GlobalContext.Provider>\n\t);\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Balance = () => {\n\tconst { transactions } = useContext(GlobalContext);\n\n\tconst amounts = transactions.map((transaction) => transaction.amount);\n\tconst total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n\treturn (\n\t\t<>\n\t\t\t<h4>Your Balance</h4>\n\t\t\t<h1>${total}</h1>\n\t\t</>\n\t);\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const IncomeExpenses = () => {\n\tconst { transactions } = useContext(GlobalContext);\n\n\tconst amounts = transactions.map((transaction) => transaction.amount);\n\n\tconst income = amounts\n\t\t.filter((item) => item > 0)\n\t\t.reduce((acc, item) => (acc += item), 0)\n\t\t.toFixed(2);\n\n\tconst expense = (\n\t\tamounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n\t\t-1\n\t).toFixed(2);\n\n\treturn (\n\t\t<div className=\"inc-exp-container\">\n\t\t\t<div>\n\t\t\t\t<h4>Income</h4>\n\t\t\t\t<p className=\"money plus\">{income}</p>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h4>Expense</h4>\n\t\t\t\t<p className=\"money minus\">{expense}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = ({ transaction }) => {\n\tconst { deleteTransaction } = useContext(GlobalContext);\n\n\tconst sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n\treturn (\n\t\t<li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n\t\t\t{transaction.text}{\" \"}\n\t\t\t<span>\n\t\t\t\t{sign}${Math.abs(transaction.amount)}\n\t\t\t</span>\n\t\t\t<button\n\t\t\t\tonClick={() => deleteTransaction(transaction.id)}\n\t\t\t\tclassName=\"delete-btn\"\n\t\t\t>\n\t\t\t\tx\n\t\t\t</button>\n\t\t</li>\n\t);\n};\n","import React, { useContext } from \"react\";\nimport { Transaction } from \"./Transaction\";\n\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const TransactionList = () => {\n\tconst { transactions } = useContext(GlobalContext);\n\n\treturn (\n\t\t<>\n\t\t\t<h3>History</h3>\n\t\t\t<ul className=\"list\">\n\t\t\t\t{transactions.map((transaction) => (\n\t\t\t\t\t<Transaction key={transaction.id} transaction={transaction} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n","import React, { useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n\tconst [text, setText] = useState(\"\");\n\tconst [amount, setAmount] = useState(0);\n\n\tconst { addTransaction } = useContext(GlobalContext);\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst newTransaction = {\n\t\t\tid: Math.floor(Math.random() * 100000000),\n\t\t\ttext,\n\t\t\tamount: +amount,\n\t\t};\n\n\t\taddTransaction(newTransaction);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h3>Add new transaction</h3>\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t<label htmlFor=\"text\">Text</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"Enter text...\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t<label htmlFor=\"amount\">\n\t\t\t\t\t\tAmount <br />\n\t\t\t\t\t\t(negative - expense, positive - income)\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\tonChange={(e) => setAmount(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"Enter amount...\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"btn\">Add transaction</button>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n","import React from \"react\";\nimport { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport \"./App.css\";\n\nfunction App() {\n\treturn (\n\t\t<GlobalProvider>\n\t\t\t<Header />\n\t\t\t<div className=\"container\">\n\t\t\t\t<Balance />\n\t\t\t\t<IncomeExpenses />\n\t\t\t\t<TransactionList />\n\t\t\t\t<AddTransaction />\n\t\t\t</div>\n\t\t</GlobalProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n);\n"],"sourceRoot":""}